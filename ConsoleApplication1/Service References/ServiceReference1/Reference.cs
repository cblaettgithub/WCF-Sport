//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEvents", ReplyAction="http://tempuri.org/IService1/GetAllEventsResponse")]
        WcfService_Sport.Events[] GetAllEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEvents", ReplyAction="http://tempuri.org/IService1/GetAllEventsResponse")]
        System.Threading.Tasks.Task<WcfService_Sport.Events[]> GetAllEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResults", ReplyAction="http://tempuri.org/IService1/GetResultsResponse")]
        WcfService_Sport.Result[] GetResults(WcfService_Sport.Events events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetResults", ReplyAction="http://tempuri.org/IService1/GetResultsResponse")]
        System.Threading.Tasks.Task<WcfService_Sport.Result[]> GetResultsAsync(WcfService_Sport.Events events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEvents", ReplyAction="http://tempuri.org/IService1/InsertEventsResponse")]
        void InsertEvents(WcfService_Sport.Events events);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEvents", ReplyAction="http://tempuri.org/IService1/InsertEventsResponse")]
        System.Threading.Tasks.Task InsertEventsAsync(WcfService_Sport.Events events);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ConsoleApplication1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.IService1>, ConsoleApplication1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WcfService_Sport.Events[] GetAllEvents() {
            return base.Channel.GetAllEvents();
        }
        
        public System.Threading.Tasks.Task<WcfService_Sport.Events[]> GetAllEventsAsync() {
            return base.Channel.GetAllEventsAsync();
        }
        
        public WcfService_Sport.Result[] GetResults(WcfService_Sport.Events events) {
            return base.Channel.GetResults(events);
        }
        
        public System.Threading.Tasks.Task<WcfService_Sport.Result[]> GetResultsAsync(WcfService_Sport.Events events) {
            return base.Channel.GetResultsAsync(events);
        }
        
        public void InsertEvents(WcfService_Sport.Events events) {
            base.Channel.InsertEvents(events);
        }
        
        public System.Threading.Tasks.Task InsertEventsAsync(WcfService_Sport.Events events) {
            return base.Channel.InsertEventsAsync(events);
        }
    }
}
